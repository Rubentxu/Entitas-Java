package com.ilargia.games.egdx.logicbricks.gen;

import com.ilargia.games.entitas.Context;
import com.ilargia.games.entitas.api.*;
import com.ilargia.games.egdx.logicbricks.gen.game.GameEntity;
import com.ilargia.games.egdx.logicbricks.gen.gui.GuiEntity;
import com.ilargia.games.egdx.logicbricks.gen.scene.SceneEntity;
import com.ilargia.games.egdx.logicbricks.gen.sensor.SensorEntity;
import com.ilargia.games.egdx.logicbricks.gen.actuator.ActuatorEntity;
import com.ilargia.games.egdx.logicbricks.gen.game.GameComponentsLookup;
import com.ilargia.games.egdx.logicbricks.gen.gui.GuiComponentsLookup;
import com.ilargia.games.egdx.logicbricks.gen.scene.SceneComponentsLookup;
import com.ilargia.games.egdx.logicbricks.gen.sensor.SensorComponentsLookup;
import com.ilargia.games.egdx.logicbricks.gen.actuator.ActuatorComponentsLookup;
import com.ilargia.games.egdx.logicbricks.gen.game.GameContext;
import com.ilargia.games.egdx.logicbricks.gen.gui.GuiContext;
import com.ilargia.games.egdx.logicbricks.gen.scene.SceneContext;
import com.ilargia.games.egdx.logicbricks.gen.sensor.SensorContext;
import com.ilargia.games.egdx.logicbricks.gen.actuator.ActuatorContext;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp.
 * ---------------------------------------------------------------------------
 */
public class Entitas implements IContexts {

	public GameContext game;
	public GuiContext gui;
	public SceneContext scene;
	public SensorContext sensor;
	public ActuatorContext actuator;

	public Entitas() {
		game = createGameContext();
		gui = createGuiContext();
		scene = createSceneContext();
		sensor = createSensorContext();
		actuator = createActuatorContext();
	}

	public GameContext createGameContext() {
		return new GameContext(GameComponentsLookup.totalComponents, 0,
				new ContextInfo("Game", GameComponentsLookup.componentNames(),
						GameComponentsLookup.componentTypes()),
				factoryGameEntity());
	}

	public GuiContext createGuiContext() {
		return new GuiContext(GuiComponentsLookup.totalComponents, 0,
				new ContextInfo("Gui", GuiComponentsLookup.componentNames(),
						GuiComponentsLookup.componentTypes()),
				factoryGuiEntity());
	}

	public SceneContext createSceneContext() {
		return new SceneContext(SceneComponentsLookup.totalComponents, 0,
				new ContextInfo("Scene",
						SceneComponentsLookup.componentNames(),
						SceneComponentsLookup.componentTypes()),
				factorySceneEntity());
	}

	public SensorContext createSensorContext() {
		return new SensorContext(SensorComponentsLookup.totalComponents, 0,
				new ContextInfo("Sensor", SensorComponentsLookup
						.componentNames(), SensorComponentsLookup
						.componentTypes()),
				factorySensorEntity());
	}

	public ActuatorContext createActuatorContext() {
		return new ActuatorContext(ActuatorComponentsLookup.totalComponents, 0,
				new ContextInfo("Actuator", ActuatorComponentsLookup
						.componentNames(), ActuatorComponentsLookup
						.componentTypes()),
				factoryActuatorEntity());
	}

	@Override
	public Context[] allContexts() {
		return new Context[]{game, gui, scene, sensor, actuator};
	}

	public EntityBaseFactory<GameEntity> factoryGameEntity() {
		return () -> {
			return new GameEntity();
		};
	}

	public EntityBaseFactory<GuiEntity> factoryGuiEntity() {
		return () -> {
			return new GuiEntity();
		};
	}

	public EntityBaseFactory<SceneEntity> factorySceneEntity() {
		return () -> {
			return new SceneEntity();
		};
	}

	public EntityBaseFactory<SensorEntity> factorySensorEntity() {
		return () -> {
			return new SensorEntity();
		};
	}

	public EntityBaseFactory<ActuatorEntity> factoryActuatorEntity() {
		return () -> {
			return new ActuatorEntity();
		};
	}
}