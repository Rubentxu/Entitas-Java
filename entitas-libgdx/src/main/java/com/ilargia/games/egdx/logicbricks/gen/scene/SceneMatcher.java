package com.ilargia.games.egdx.logicbricks.gen.scene;

import com.ilargia.games.entitas.matcher.Matcher;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp.
 * ---------------------------------------------------------------------------
 */
public class SceneMatcher {

	private static Matcher _matcherCChainLight;
	private static Matcher _matcherCConeLight;
	private static Matcher _matcherCDirectionalLight;
	private static Matcher _matcherCPointLight;
	private static Matcher _matcherCamera;
	private static Matcher _matcherCatch;
	private static Matcher _matcherGameWorld;
	private static Matcher _matcherParallaxLayer;
	private static Matcher _matcherTiled;

	public static Matcher CChainLight() {
		if (_matcherCChainLight == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.CChainLight);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherCChainLight = matcher;
		}
		return _matcherCChainLight;
	}

	public static Matcher CConeLight() {
		if (_matcherCConeLight == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.CConeLight);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherCConeLight = matcher;
		}
		return _matcherCConeLight;
	}

	public static Matcher CDirectionalLight() {
		if (_matcherCDirectionalLight == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.CDirectionalLight);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherCDirectionalLight = matcher;
		}
		return _matcherCDirectionalLight;
	}

	public static Matcher CPointLight() {
		if (_matcherCPointLight == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.CPointLight);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherCPointLight = matcher;
		}
		return _matcherCPointLight;
	}

	public static Matcher Camera() {
		if (_matcherCamera == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.Camera);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherCamera = matcher;
		}
		return _matcherCamera;
	}

	public static Matcher Catch() {
		if (_matcherCatch == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.Catch);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherCatch = matcher;
		}
		return _matcherCatch;
	}

	public static Matcher GameWorld() {
		if (_matcherGameWorld == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.GameWorld);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherGameWorld = matcher;
		}
		return _matcherGameWorld;
	}

	public static Matcher ParallaxLayer() {
		if (_matcherParallaxLayer == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.ParallaxLayer);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherParallaxLayer = matcher;
		}
		return _matcherParallaxLayer;
	}

	public static Matcher Tiled() {
		if (_matcherTiled == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(SceneComponentsLookup.Tiled);
			matcher.componentNames = SceneComponentsLookup.componentNames();
			_matcherTiled = matcher;
		}
		return _matcherTiled;
	}
}