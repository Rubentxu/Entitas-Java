package com.indignado.games.states.game.gen.gui;

import com.ilargia.games.entitas.api.*;
import com.ilargia.games.entitas.Entity;
import java.util.Stack;
import com.indignado.games.states.game.component.gui.Label;
import com.ilargia.games.entitas.api.IComponent;
import com.indignado.games.states.game.component.gui.Score;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp.
 * ---------------------------------------------------------------------------
 */
public class GuiEntity extends Entity {

	public GuiEntity() {
	}

	public Label getLabel() {
		return (Label) getComponent(GuiComponentsLookup.Label);
	}

	public boolean hasLabel() {
		return hasComponent(GuiComponentsLookup.Label);
	}

	public GuiEntity addLabel(String text, String font) {
		Label component = (Label) recoverComponent(GuiComponentsLookup.Label);
		if (component == null) {
			component = new Label(text, font);
		} else {
			component.text = text;;
			component.font = font;
		}
		addComponent(GuiComponentsLookup.Label, component);
		return this;
	}

	public GuiEntity replaceLabel(String text, String font) {
		Label component = (Label) recoverComponent(GuiComponentsLookup.Label);
		if (component == null) {
			component = new Label(text, font);
		} else {
			component.text = text;;
			component.font = font;
		}
		replaceComponent(GuiComponentsLookup.Label, component);
		return this;
	}

	public GuiEntity removeLabel() {
		removeComponent(GuiComponentsLookup.Label);
		return this;
	}

	public Score getScore() {
		return (Score) getComponent(GuiComponentsLookup.Score);
	}

	public boolean hasScore() {
		return hasComponent(GuiComponentsLookup.Score);
	}

	public GuiEntity addScore(int value) {
		Score component = (Score) recoverComponent(GuiComponentsLookup.Score);
		if (component == null) {
			component = new Score();
		}
		component.value = value;
		addComponent(GuiComponentsLookup.Score, component);
		return this;
	}

	public GuiEntity replaceScore(int value) {
		Score component = (Score) recoverComponent(GuiComponentsLookup.Score);
		if (component == null) {
			component = new Score();
		}
		component.value = value;
		replaceComponent(GuiComponentsLookup.Score, component);
		return this;
	}

	public GuiEntity removeScore() {
		removeComponent(GuiComponentsLookup.Score);
		return this;
	}
}