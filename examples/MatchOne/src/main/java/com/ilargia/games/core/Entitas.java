package com.ilargia.games.core;

import java.util.Stack;
import com.ilargia.games.entitas.Context;
import com.ilargia.games.entitas.api.*;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp.
 * ---------------------------------------------------------------------------
 */
public class Entitas {

	public InputContext input;
	public ScoreContext score;
	public CoreContext core;

	public Entitas() {
		input = createInputContext();
		score = createScoreContext();
		core = createCoreContext();
	}

	public InputContext createInputContext() {
		return new InputContext(InputComponentIds.totalComponents, 0,
				new ContextInfo("Input", InputComponentIds.componentNames(),
						InputComponentIds.componentTypes()),
				factoryInputEntity());
	}

	public ScoreContext createScoreContext() {
		return new ScoreContext(ScoreComponentIds.totalComponents, 0,
				new ContextInfo("Score", ScoreComponentIds.componentNames(),
						ScoreComponentIds.componentTypes()),
				factoryScoreEntity());
	}

	public CoreContext createCoreContext() {
		return new CoreContext(CoreComponentIds.totalComponents, 0,
				new ContextInfo("Core", CoreComponentIds.componentNames(),
						CoreComponentIds.componentTypes()), factoryCoreEntity());
	}

	public Context[] allContexts() {
		return new Context[]{input, score, core};
	}

	public FactoryEntity<InputEntity> factoryInputEntity() {
		return (int totalComponents, Stack<IComponent>[] componentContexts,
				ContextInfo contextInfo) -> {
			return new InputEntity(totalComponents, componentContexts,
					contextInfo);
		};
	}

	public FactoryEntity<ScoreEntity> factoryScoreEntity() {
		return (int totalComponents, Stack<IComponent>[] componentContexts,
				ContextInfo contextInfo) -> {
			return new ScoreEntity(totalComponents, componentContexts,
					contextInfo);
		};
	}

	public FactoryEntity<CoreEntity> factoryCoreEntity() {
		return (int totalComponents, Stack<IComponent>[] componentContexts,
				ContextInfo contextInfo) -> {
			return new CoreEntity(totalComponents, componentContexts,
					contextInfo);
		};
	}
}