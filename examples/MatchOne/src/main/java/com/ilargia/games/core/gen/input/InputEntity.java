package com.ilargia.games.core.gen.input;

import com.ilargia.games.entitas.Entity;
import com.ilargia.games.core.component.input.BurstMode;
import com.ilargia.games.core.component.input.Input;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp.
 * ---------------------------------------------------------------------------
 */
public class InputEntity extends Entity {

	public BurstMode BurstModeComponent = new BurstMode();

	public InputEntity() {
	}

	public boolean isBurstMode() {
		return hasComponent(InputComponentsLookup.BurstMode);
	}

	public InputEntity setBurstMode(boolean value) {
		if (value != hasComponent(InputComponentsLookup.BurstMode)) {
			if (value) {
				addComponent(InputComponentsLookup.BurstMode,
						BurstModeComponent);
			} else {
				removeComponent(InputComponentsLookup.BurstMode);
			}
		}
		return this;
	}

	public Input getInput() {
		return (Input) getComponent(InputComponentsLookup.Input);
	}

	public boolean hasInput() {
		return hasComponent(InputComponentsLookup.Input);
	}

	public InputEntity addInput(int x, int y) {
		Input component = (Input) recoverComponent(InputComponentsLookup.Input);
		if (component == null) {
			component = new Input(x, y);
		} else {
			component.x = x;;
			component.y = y;
		}
		addComponent(InputComponentsLookup.Input, component);
		return this;
	}

	public InputEntity replaceInput(int x, int y) {
		Input component = (Input) recoverComponent(InputComponentsLookup.Input);
		if (component == null) {
			component = new Input(x, y);
		} else {
			component.x = x;;
			component.y = y;
		}
		replaceComponent(InputComponentsLookup.Input, component);
		return this;
	}

	public InputEntity removeInput() {
		removeComponent(InputComponentsLookup.Input);
		return this;
	}
}