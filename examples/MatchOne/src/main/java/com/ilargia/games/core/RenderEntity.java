package com.ilargia.games.core;

import com.ilargia.games.entitas.api.*;
import com.ilargia.games.entitas.Entity;
import java.util.Stack;
import com.ilargia.games.components.TextureView;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.math.Vector2;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp.
 * ---------------------------------------------------------------------------
 */
public class RenderEntity extends Entity {

	public RenderEntity(int totalComponents,
			Stack<IComponent>[] componentContexts, ContextInfo contextInfo) {
		super(totalComponents, componentContexts, contextInfo);
	}

	public TextureView getTextureView() {
		return (TextureView) getComponent(RenderComponentIds.TextureView);
	}

	public boolean hasTextureView() {
		return hasComponent(RenderComponentIds.TextureView);
	}

	public RenderEntity addTextureView(String name, TextureRegion texture,
			Vector2 position, float rotation, int height, int width) {
		TextureView component = (TextureView) recoverComponent(RenderComponentIds.TextureView);
		if (component == null) {
			component = new TextureView(name, texture, position, rotation,
					height, width);
		} else {
			component.name = name;;
			component.texture = texture;;
			component.position = position;;
			component.rotation = rotation;;
			component.height = height;;
			component.width = width;
		}
		addComponent(RenderComponentIds.TextureView, component);
		return this;
	}

	public RenderEntity replaceTextureView(String name, TextureRegion texture,
			Vector2 position, float rotation, int height, int width) {
		TextureView component = (TextureView) recoverComponent(RenderComponentIds.TextureView);
		if (component == null) {
			component = new TextureView(name, texture, position, rotation,
					height, width);
		} else {
			component.name = name;;
			component.texture = texture;;
			component.position = position;;
			component.rotation = rotation;;
			component.height = height;;
			component.width = width;
		}
		replaceComponent(RenderComponentIds.TextureView, component);
		return this;
	}

	public RenderEntity removeTextureView() {
		removeComponent(RenderComponentIds.TextureView);
		return this;
	}
}