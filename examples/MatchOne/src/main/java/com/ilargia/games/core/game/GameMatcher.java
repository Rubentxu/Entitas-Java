package com.ilargia.games.core.game;

import com.ilargia.games.entitas.matcher.Matcher;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp.
 * ---------------------------------------------------------------------------
 */
public class GameMatcher {

	private static Matcher _matcherAsset;
	private static Matcher _matcherDestroy;
	private static Matcher _matcherGameBoard;
	private static Matcher _matcherGameBoardElement;
	private static Matcher _matcherInteractive;
	private static Matcher _matcherMovable;
	private static Matcher _matcherPosition;
	private static Matcher _matcherTextureView;

	public static Matcher Asset() {
		if (_matcherAsset == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(GameComponentsLookup.Asset);
			matcher.componentNames = GameComponentsLookup.componentNames();
			_matcherAsset = matcher;
		}
		return _matcherAsset;
	}

	public static Matcher Destroy() {
		if (_matcherDestroy == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(GameComponentsLookup.Destroy);
			matcher.componentNames = GameComponentsLookup.componentNames();
			_matcherDestroy = matcher;
		}
		return _matcherDestroy;
	}

	public static Matcher GameBoard() {
		if (_matcherGameBoard == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(GameComponentsLookup.GameBoard);
			matcher.componentNames = GameComponentsLookup.componentNames();
			_matcherGameBoard = matcher;
		}
		return _matcherGameBoard;
	}

	public static Matcher GameBoardElement() {
		if (_matcherGameBoardElement == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(GameComponentsLookup.GameBoardElement);
			matcher.componentNames = GameComponentsLookup.componentNames();
			_matcherGameBoardElement = matcher;
		}
		return _matcherGameBoardElement;
	}

	public static Matcher Interactive() {
		if (_matcherInteractive == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(GameComponentsLookup.Interactive);
			matcher.componentNames = GameComponentsLookup.componentNames();
			_matcherInteractive = matcher;
		}
		return _matcherInteractive;
	}

	public static Matcher Movable() {
		if (_matcherMovable == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(GameComponentsLookup.Movable);
			matcher.componentNames = GameComponentsLookup.componentNames();
			_matcherMovable = matcher;
		}
		return _matcherMovable;
	}

	public static Matcher Position() {
		if (_matcherPosition == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(GameComponentsLookup.Position);
			matcher.componentNames = GameComponentsLookup.componentNames();
			_matcherPosition = matcher;
		}
		return _matcherPosition;
	}

	public static Matcher TextureView() {
		if (_matcherTextureView == null) {
			Matcher matcher = (Matcher) Matcher
					.AllOf(GameComponentsLookup.TextureView);
			matcher.componentNames = GameComponentsLookup.componentNames();
			_matcherTextureView = matcher;
		}
		return _matcherTextureView;
	}
}