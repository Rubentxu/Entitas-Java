import jdk.nashorn.internal.codegen.CodeGenerator

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

project.ext.mainClassName = "com.ilargia.games.entitas.codeGenerator.CodeGeneratorApp"


task(codeGenerator, dependsOn: 'classes', type: JavaExec) {
    main = 'com.ilargia.games.entitas.codeGenerator.CodeGeneratorApp'
    classpath = sourceSets.main.runtimeClasspath
    args 'dirComponents dirDestino'
    standardInput = System.in
    //workingDir = project.assetsDir
    ignoreExitValue = true

}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }
//    from files(project.assetsDir);

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}
dist.dependsOn classes


public static void main(String[] args) {
    String dirComponents = args[0];
    String dirDestino = args[1];
    System.out.println(String.format("Buscando componentes en path %s codigo gnerado en path %s", dirComponents, dirDestino));
    CodeGenerator generator = new CodeGenerator(args[0], args[1]);
}
