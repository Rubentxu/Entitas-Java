import jdk.nashorn.internal.codegen.CodeGenerator

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8



project.ext.mainClassName = "com.ilargia.games.entitas.codeGenerator.CodeGeneratorApp"

jar {
    manifest {
        attributes 'Main-Class': 'com.ilargia.games.entitas.codeGenerator.CodeGeneratorApp'
    }
}


task(codeGenerator, dependsOn: 'classes', type: JavaExec) {
    main = 'com.ilargia.games.entitas.codeGenerator.CodeGeneratorApp'
    classpath = sourceSets.main.runtimeClasspath
    args 'dirComponents dirDestino'
    standardInput = System.in
    //workingDir = project.assetsDir
    ignoreExitValue = true

}


task CodeGenerator(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar CodeGenerator',
                'Implementation-Version': version,
                'Main-Class': 'com.ilargia.games.entitas.codeGenerator.CodeGeneratorApp'
    }
    baseName = 'CodeGenerator'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

public static void main(String[] args) {
    String dirComponents = args[0];
    String dirDestino = args[1];
    System.out.println(String.format("Buscando componentes en path %s codigo generado en path %s", dirComponents, dirDestino));
    CodeGenerator generator = new CodeGenerator(args[0], args[1]);
}
