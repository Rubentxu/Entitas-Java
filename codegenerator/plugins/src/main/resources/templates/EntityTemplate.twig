{{ Package }}

{% for im in Imports %}
    {{ im }}
{% endfor %}

public class {{ ContextName }}Entity extends Entity {

{% for data in FlagComponent %}
    public {{ data.ComponentType }} {{ data.ComponentName }}Component = new {{ data.ComponentType }}();
{% endfor %}

{% for data in FlagComponent %}
   	public boolean {{ data.PrefixedName }}() {
		return hasComponent({{ data.Index }});
	}

	public {{ ContextName }}Entity set{{ data.ComponentName }}(boolean value) {
		if (value != hasComponent({{ data.Index }})) {
			if (value) {
				addComponent({{ data.Index }}, {{ data.ComponentName }}Component);
			} else {
				removeComponent({{ data.Index }});
			}
		}
		return this;
	}

{% endfor %}

{% for data in StandardComponent %}
public {{ data.ComponentType }} get{{ data.ComponentName }}() {
		return ({{ data.ComponentType }}) getComponent({{ data.Index }});
	}

	public boolean has{{ data.ComponentName }}() {
		return hasComponent({{ data.Index }});
	}

	public {{ ContextName }}Entity add{{ data.ComponentName }}({{ data.MemberArgs }}) {
		{{ data.ComponentName }} component = (data.ComponentName) recoverComponent({{ data.Index }});
		if (component == null) {
			component = new {{ data.ComponentName }}();
		}
		{{ data.MemberAssignment }}
		addComponent({{ data.Index }}, component);
		return this;
	}

	public {{ ContextName }}Entity replace{{ data.ComponentName }}({{ data.MemberArgs }}) {
		Animations component = (Animations) recoverComponent(GameComponentsLookup.Animations);
		if (component == null) {
			component = new {{ data.ComponentName }}();
		}
		{{ data.MemberAssignment }}
		replaceComponent({{ data.Index }}, component);
		return this;
	}

	public {{ ContextName }}Entity remove{{ data.ComponentName }}() {
		removeComponent({{ data.Index }});
		return this;
	}

{% endfor %}

}


