package test.gen;

import ilargia.entitas.Context;
import ilargia.entitas.api.*;
import ilargia.entitas.api.entitas.EntityBaseFactory;
import test.gen.game.GameContext;
import test.gen.game.GameComponentsLookup;
import test.gen.game.GameEntity;
import test.gen.test.TestContext;
import test.gen.test.TestComponentsLookup;
import test.gen.test.TestEntity;
import test.gen.game.StateContext;
import test.gen.game.StateComponentsLookup;
import test.gen.game.StateEntity;
import test.gen.test.CoreContext;
import test.gen.test.CoreComponentsLookup;
import test.gen.test.CoreEntity;

/**
 * //-------------------------------------------------------------------------//
 * <auto-generated>// This code was generated by {0}.//// Changes to this file
 * may cause incorrect behavior and will be lost if// the code is regenerated.//
 * </auto-generated>//----------------------------------------------------------
 * ---------------
 */
public class Entitas implements IContexts {

	public GameContext game;
	public TestContext test;
	public StateContext state;
	public CoreContext core;

	public Entitas() {
		game = createGameContext();
		test = createTestContext();
		state = createStateContext();
		core = createCoreContext();
	}

	public GameContext createGameContext() {
		return new GameContext(GameComponentsLookup.totalComponents, 0,
				new ContextInfo("Game", GameComponentsLookup.componentNames(),
						GameComponentsLookup.componentTypes()),
				factoryGameEntity());
	}

	public TestContext createTestContext() {
		return new TestContext(TestComponentsLookup.totalComponents, 0,
				new ContextInfo("Test", TestComponentsLookup.componentNames(),
						TestComponentsLookup.componentTypes()),
				factoryTestEntity());
	}

	public StateContext createStateContext() {
		return new StateContext(StateComponentsLookup.totalComponents, 0,
				new ContextInfo("State",
						StateComponentsLookup.componentNames(),
						StateComponentsLookup.componentTypes()),
				factoryStateEntity());
	}

	public CoreContext createCoreContext() {
		return new CoreContext(CoreComponentsLookup.totalComponents, 0,
				new ContextInfo("Core", CoreComponentsLookup.componentNames(),
						CoreComponentsLookup.componentTypes()),
				factoryCoreEntity());
	}

	@Override
	public Context[] allContexts() {
		return new Context[]{game, test, state, core};
	}

	public EntityBaseFactory<GameEntity> factoryGameEntity() {
		return () -> {
			return new GameEntity();
		};
	}

	public EntityBaseFactory<TestEntity> factoryTestEntity() {
		return () -> {
			return new TestEntity();
		};
	}

	public EntityBaseFactory<StateEntity> factoryStateEntity() {
		return () -> {
			return new StateEntity();
		};
	}

	public EntityBaseFactory<CoreEntity> factoryCoreEntity() {
		return () -> {
			return new CoreEntity();
		};
	}
}