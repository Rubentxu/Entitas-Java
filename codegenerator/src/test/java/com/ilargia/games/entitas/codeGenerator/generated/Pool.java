package com.ilargia.games.entitas.codeGenerator.generated;

import com.ilargia.games.entitas.PoolMetaData;
import com.ilargia.games.entitas.interfaces.FactoryEntity;
import com.ilargia.games.entitas.exceptions.EntitasException;
import com.ilargia.games.entitas.codeGenerator.Components.Screen;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp. Changes to
 * this file may cause incorrect behavior and will be lost.
 * 
 * ---------------------------------------------------------------------------
 */
public class Pool extends com.ilargia.games.entitas.Pool<Entity> {

	public Pool(int totalComponents, int startCreationIndex,
			PoolMetaData metaData, FactoryEntity<Entity> factoryMethod) {
		super(totalComponents, startCreationIndex, metaData, factoryMethod);
	}

	public Entity getScreenEntity() {
		return getGroup(CoreMatcher._matcherScreen).getSingleEntity();
	}

	public Screen getScreen() {
		return getScreenEntity().getScreen();
	}

	public boolean hasScreen() {
		return getScreenEntity() != null;
	}

	public Entity setScreen(float _width, float _height) {
		if (hasScreen()) {
			throw new EntitasException(
					"Could not set Screen!" + this
							+ " already has an entity with Screen!",
					"You should check if the pool already has a ScreenEntity before setting it or use pool.ReplaceScreen().");
		}
		Entity entity = createEntity();
		entity.addScreen(_width, _height);
		return entity;
	}

	public Entity replaceScreen(float _width, float _height) {
		Entity entity = getScreenEntity();
		if (entity == null) {
			entity = setScreen(_width, _height);
		} else {
			entity.replaceScreen(_width, _height);
		}
		return entity;
	}

	public void removeScreen() {
		destroyEntity(getScreenEntity());
	}

	public Entity getGameOverEntity() {
		return getGroup(CoreMatcher._matcherGameOver).getSingleEntity();
	}

	public boolean isGameOver() {
		return getGameOverEntity() != null;
	}

	public void setGameOver(boolean value) {
		Entity entity = getGameOverEntity();
		if (value != (entity != null)) {
			if (value) {
				entity.setGameOver(true);
			} else {
				destroyEntity(entity);
			}
		}
	}
}